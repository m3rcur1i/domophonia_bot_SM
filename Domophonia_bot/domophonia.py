from http.client import responses
import telebot
import requests
import json

from telebot.apihelper import send_message
from telebot.types import InlineKeyboardMarkup, ReplyKeyboardMarkup

from requ import *

token="7162249200:AAEDzqbzwiHbOufNtFkERk4ot304dX1F_cM"
bot=telebot.TeleBot(token)

class Authorization():
    def __init__(self, tenant_ID, number):
        self.number = number
        self.tenant_ID = tenant_ID
    def data(self, current_apartment):
        self.current_apartment = current_apartment
users = {0 : 0}
ids = {}
@bot.message_handler(commands=['buffer'])
def buffer(message):
    bot.send_message(message.chat.id, message.chat.id)

@bot.message_handler(commands=['users'])
def users_show(message):
    bot.send_message(message.chat.id, users[message.chat.id].tenant_ID)


@bot.message_handler(commands=['authorize', 'start'])
def tenant_id(message):
    global user_number, tenant_flag
    tenant_flag = 0
    print("–°–æ–∑–¥–∞–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é")
    bot.send_message(message.chat.id, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —è —á–∞—Ç –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∞—à–∏–º–∏ –¥–æ–º–æ—Ñ–æ–Ω–∞–º–∏!")
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    button = telebot.types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üìû", request_contact=True)
    markup.add(button)
    bot.send_message(message.chat.id,"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:", reply_markup=markup)
@bot.message_handler(content_types=['contact'])
def number_save(message):
    global user_number, tenant_flag
    user_number = message.contact.phone_number.replace(" ", "")[1:]

    responce = check_tenant(user_number)

    match responce.status_code == 200:
        case (True):
            users[message.chat.id] = Authorization(responce.text[13:-1], user_number)
            ids[user_number] = message.chat.id
            print("–£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è", message.chat.id, users)
            bot.send_message(message.chat.id, "–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å!", reply_markup=telebot.types.ReplyKeyboardRemove())
            markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            button = telebot.types.KeyboardButton("–ú–æ–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã")
            markup.add(button)
            bot.send_message(message.chat.id, "–£–¥–∞—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞—à–∏–º —Å–µ—Ä–≤–∏—Å–æ–º!", reply_markup=markup)
        case (False):
            bot.send_message(message.chat.id, "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω", reply_markup=telebot.types.ReplyKeyboardRemove())


all_apartments = []
all_domo = []
domo_id = 0
@bot.message_handler(func=lambda message: message.text == "–ú–æ–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã")
def my_apartments(message):
    print("–ú–æ–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã")
    global all_apartments, apartments
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    apartments = domo_apartment(users[message.chat.id].tenant_ID)
    for i in apartments:
        markup.add(f"{i[2]}, {i[1]}")
        all_apartments += [f"{i[2]}, {i[1]}"]
    bot.send_message(message.chat.id, "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–≤–∞—Ä—Ç–∏—Ä—É, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–æ–º–æ—Ñ–æ–Ω—ã", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–≤–∞—Ä—Ç–∏—Ä—ã")
def return_to_aps(message):
    global all_apartments, apartments
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    apartments = domo_apartment(users[message.chat.id].tenant_ID)
    for i in apartments:
        markup.add(f"{i[2]}, {i[1]}")
        all_apartments += [f"{i[2]}, {i[1]}"]
    bot.send_message(message.chat.id, "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–≤–∞—Ä—Ç–∏—Ä—É, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–æ–º–æ—Ñ–æ–Ω—ã", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text in all_apartments)
def get_domophones(message, prev_apartment=""):
    global all_domo
    if prev_apartment == "":
        users[message.chat.id].current_apartment = message.text
    apartment = users[message.chat.id].current_apartment[users[message.chat.id].current_apartment.find(", ")+2:]
    for i in apartments:
        if apartment == i[1]:
            apartment = i[0]

    domophons = get_domophons(users[message.chat.id].tenant_ID, apartment)
    markup=telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    for i in domophons:
        markup.add(telebot.types.KeyboardButton(f"{i[1]} ‚Ññ{i[0]}"))
        all_domo += [f"{i[1]} ‚Ññ{i[0]}"]
    markup.add("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–≤–∞—Ä—Ç–∏—Ä—ã")
    print(all_domo)
    bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–æ–º–æ—Ñ–æ–Ω–æ–≤:", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text in all_domo)
def domo_menu(message):
    global domo_id
    domo_id = message.text[message.text.find("‚Ññ")+1:]
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    domo_open = telebot.types.KeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –¥–æ–º–æ—Ñ–æ–Ω")
    domo_photo = telebot.types.KeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–Ω–∏–º–æ–∫ —Å –∫–∞–º–µ—Ä—ã")
    domo_back = telebot.types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –¥–æ–º–æ—Ñ–æ–Ω–∞–º")
    markup.add(domo_open, domo_photo)
    markup.add(domo_back)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –¥–æ–º–æ—Ñ–æ–Ω–∞–º")
def back(message, prev_apartment=""):
    global all_domo
    apartment = users[message.chat.id].current_apartment[users[message.chat.id].current_apartment.find(", ")+2:]
    for i in apartments:
        if apartment == i[1]:
            apartment = i[0]

    domophons = get_domophons(users[message.chat.id].tenant_ID, apartment)
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    for i in domophons:
        markup.add(telebot.types.KeyboardButton(f"{i[1]} ‚Ññ{i[0]}"))
        all_domo += [f"{i[1]} ‚Ññ{i[0]}"]
    bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–æ–º–æ—Ñ–æ–Ω–æ–≤:", reply_markup=markup)


photo_flag = 1
@bot.message_handler(func=lambda message: message.text == "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–Ω–∏–º–æ–∫ —Å –∫–∞–º–µ—Ä—ã")
def get_domophone_photo(message):
    global domo_id
    photo = get_photo(domo_id, users[message.chat.id].tenant_ID)
    if photo[1] == 200  :
        bot.send_photo(message.chat.id, photo[0])
    else:
        bot.send_photo(message.chat.id, f"–û—à–∏–±–∫–∞ {photo[1]}")


@bot.message_handler(func=lambda message: message.text == "–û—Ç–∫—Ä—ã—Ç—å –¥–æ–º–æ—Ñ–æ–Ω")
def open(message):
    global domo_id
    response = open_domophon(users[message.chat.id].tenant_ID, domo_id)
    if response == 200:
        bot.send_message(message.chat.id, "–î–æ–º–æ—Ñ–æ–Ω –æ—Ç–∫—Ä—ã—Ç")
    else:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞ {response}")




@bot.message_handler(func=lambda message: message.text not in all_domo and message.text not in all_apartments)
def unsupported(message):
    bot.send_message(message.chat.id, "–ù–µ-–∞")







bot.infinity_polling()

